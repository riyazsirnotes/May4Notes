*********************************************
				4th May Thursday
*********************************************

Manual Testing :

_____________________________
Module 1
Software Testing Concepts
____________________________

S/W or IT 

Set of instructions or programs to perform some tasks

e.g 

calculator , whatsapp etc..

Types of Software :

1. System softwares

Operating System , driver etc 

2. Programming softwares

compilers , interpreters , debugging tools etc ..

3. Applictaions Softwares

Web applications , mobile apps , mainframe apps , silverlite apps


what is Testing ?

It is a process of checking  developed s/w is working as per client/customer buisness
requirements or not.

And also finding defects

Prime motto :

Testing is carried out to deliver a quality and risk free product to the customers


what do we test now-a-days (Web applications)

1) Functionalities

2) GUI (Graphical User Interface)

3) Usability 

4) Load 

5) Performance

6) Security 

7) Compatability


Manual Testing :

If any testing activity (either functional or load or compatabilty) carried using man effort 


Automation:

If we make testing process automated using the tools ( Selenium , TOSCA , UFT etc )


Terminologies in Software Industry :


1. Project

If a s/w app deisgned for a specific customer 

2. Product

if a s/w app is designed for mutiple cutomers 


*********************************************
Day2			5th May Friday
*********************************************

NCR

ATM Machine H/W and S/W

HDFC			ICICI			Kotak Mahindra


Error : 

Any incorrect human action that produces wrong results is called error.

Defect/Bug/Fault/Issue :

Deviation b/n expected behaviour of the s/m to Actual behaviour of the s/m

Defect it's an informal word used for any kind deviation in any stage of app developement cycle

Bug / Fault / Issue  

In Testing cycle 

Failure /Incident : 

If end user identifies a problem while using the application then it is called failure .


Note : presence of erros results in defects and presence of defects will results in failureof product


-------------------------------------
why do a s/w app will have defect ?

1) Incorrect requirements

2) Wrong Design

3) Wrong Coding

4) Poor Coding

5) Complex Architecture

6) Work Pressure and time pressure

7) Frequently changing buisness requirements


-----------------------------------------
Cost of Fixing Defect (CFD)

Now-a-days Testing :

It is a process of checking are we developing right s/w or not and also developed s/w is working as per client/customer buisness
requirements or not.

S/W Testing = Verification + Validation

-------------------------------------
Positive Testing :

If we test functionality with a positive perception 

Positive testing will help in enusring s/m meeting buisness requirements or not

-------------------------------------

Negative Testing :

If we test functionality with a negative perception 

Negative testing will help you in finding defects



*********************************************
Day 3			6th May Saturday
*********************************************


------------------------------------
Role of Tester 

1) Understanding AUT / Project 
    Domain Knowledge
2) Formal Testing ( writing and executing Test case )
3) Adhoc Testing (Informal Testing) / No test cases
4) Finding defects & Report to Developers

https://adactinhotelapp.com/Register.php	

https://adactinhotelapp.com/HotelAppBuild2/Register.php

5) Retesting & Regression Testing 

6) Develop Automation Scripts

7) Excuting Test scripts

8) Analyse Results

9) Prepare test reports

------------------------------------------------
S/W Testing Principles
------------------------------------------------
1) Exhaustive testing is impossible

If we test a functionality with all possible valid and invalid
inputs/test data then it is called Exhaustive testing

In simple words ,testing everything is Exhaustive testing


*********************************************
Day 4			8th May Monday
*********************************************

S/W Testing Principles (cont ..)


2)Defect Clustering 


sometimes , a small fundtionality may produce more number of defects when compared with big
functionality

in example discussed ,

online payment looks a small functionality than customer registration . 
but here online payment business logic is more than customer registration.

Hence , chances of finding defects would be more in online payment page .

so, we have to put more testing effort for testing online payment

3) Pesticide Paradox 

If prepared test cases are not able to find defects add few more test cases or modify test cases if 
required for better testing.


4) Early Testing 

Conducting testing as soon as possible in the developement life cycle 
is called Early Testing.

5)Testing is application dependent / sometimes Testing is Situation dependent

TEst approach may slightly vary from project to project
for e.g : TEsting calculator application is different from testing e-commerce or online shopping application


sometimes , test approach may slightly chnage based upon the time or/and resource availablity

6) Testing should show presence of defects

Always testing should be carried out with an intention of finding defects.

This can be achived by doing negative testing.

7) Absence of defects is a fallacy 

Developing a s/w , testing a s/w without finding defects is no use.


-------------------------------------------------------
Software Development Life Cycle (SDLC)
-------------------------------------------------------


*********************************************
Day 5			9th May Tuesday
*********************************************

				SDLC   Models
				
1. Sequential Models
2. Incremantal Models 
				
						SDLC   Models
						
	1.Sequential Models					2.Incremantal Models					
	
	- Waterfall Model					- RAD Model (Rapid Applictaion Development)
	- V Model							- Prototype Model
										- Spiral Model
										- Agile Model(this will be covers in Module 3)
Sequential Models :

small size projects

In sequential model all developement activities carried put for entire project in a sequential order

Incremantal Models:

RAD Model :

Prototype Model :

well suitbale for developing big projects in below scenarios

1) if customer is providing reference application

2) if customer requirements are not clear


---------------------------------------
Software Testing Approaches 

					S/W  Testing
					

		Verification			Validation
		
	Static Testing				Dynamic Testing

	-Reviews
	   - Requirment Reviews
	   - Design Reviews
	   - Code Reviews
	   - Test case Review

	-WalkThrough (KT's 
				  Knowledge Transfer)


*********************************************
Day 6			10th May Wednesday
*********************************************


Static Testing	:


It is a process of checking are we developing right s/w or not

Review : Examing a project related work is called a Review

Types of Reviews :

1. Requirement Reviews : these reviews are carried out by domain experts to find 
mistakes at requirements

2. Design Reviews : these reviews are carried out by technical experts (System Architects 
or Solution Architects) to find mistakes at design levels

3. Code Reviews : these reviews are carried out by Senior/Principal Developers

4. Test case Reviews : these reviews are carried out by senior testers (test lead) to make 
sure prepared test cases are enough to test the project or not.

Formal Reviews :

If any review activity carried out by following proper review procedures and documentation

Best examples : Inspections and Audit


Inspection : if a formal review is carried out while executing a tasks

Audit : if a formal review is carried out after completion of tasks

WalkThrough :

Knowledge Transfer sessions (KT's )  are called WalkThrough's 


-------------------------------------------------

Dynamic Testing

Whitebox Testing


Unit Testing and Integration Testing collectively called as Whitebox Testing

Unit Testing :

A smallest part in the source code of application such as program , functions ,methods , procedure are called 
Units. Testing conducted on these units to make sure developed code is corerct or not is called Unit Testing



Integration Testing:

once all units are tested , programmer/developer combine all units and check over all output at code level.


Blackbox Testing :

Testing conducted on developed application by testers and by end users to make sure developed 
application is working as per client/customer buisness requirements

System testing and User Acceptance Testing (UAT)

System testing: 

It is a process of validating functional and non-functional requirements of the system
in customer buisness point of view

-----------------------------------------------
Funtional System Testing Types 
-----------------------------------------------

1) Smoke Testing :

500 TC  == All Test cases

50 TC  == Key/Critical/major Test Cases (choosen by Test Lead)

It is a kind of quick test or rough test performed on the given application/build to decide
whether it is eligible for further detailed testing.

Objective of smoke Testing :

smoke testing is carried to make sure whether the given application/build is testable or not.
Not to find defects.

2) Formal Testing :

If we test a s/w application by following proper procedures and proper documentation.

In simple words , writing test cases and executing test cases is called Formal Testing.

It is recommended for maintenance projects.

3) Adhoc Testing : 

If we test a s/w application without following any proper procedures and proper documentation.

note :
genrally , we do adhoc testing for small size applications/projects


-> adhoc testing is recommended maintenance projects after doing formal testing.

4) Priority based Testing :

It is a process of deciding what to test first and what to test next , what to test last

5) ReTesting :

It is a process of validating reported defects are correctly resolved or not in modified.

6) Regression Testing 

It is a process of identifying various functionalities in a modified build , whether 
there is chance of getting side effects.

what is the difference b/n ReTesting and Regression Testing ?

Retesting is performed on the modified build to make sure reported defects are correctly 
resolved or not

Regression Testing is performed on the modified build to determine side effects which may 

occur because of bux fix.


7) Sanity Testing :

It kind of testing done for a particular functionality deeply.

It is subset of Regression testing .

Special Function Testing Types :

1. Benchmark Testing
2. Explorating Testing 
3. Monkey Testing 


*********************************************
Day 8			15th May Monday
*********************************************

Non Functional Testing

TEsting performed to check reponsivenes , stability and security etc  aspects are called
Non Functional Testing.

1) GUI
2) Usability
3) Performance
   - Load Testing
   - Stress Testing
   - Volume Testing
4) Security
5) Compatability
6) Internationalization
7) Localization
8) Installation
9) Recovery 


1) GUI or UI (User Interface ) :

It is a process of checking user interfaces (anything on web page like button , 
textboxes , text etc )
are professionally design or not 

2) Usability :

It refers to testing an application to determine it's ease to use or 
level of user-friendliness

3) Performance

  * Reponsiveness
  * stability

   - time (response time)
   - speed (prcoessing time)
   - user data volume ( concurrent user volume)

i)Load Testing
ii) Stress Testing
iii) Volume Testing
   
Tools like jmeter, load runner , Neo Load , web load etc ..

Load Testing : 

Testing the response time of system under different loads

we increase the load gradually and test the s/m

Stress Testing:

Suddenly increasing  the load and checking the stability

Volume Testing :

Here we test user data volume and checking the stability

Security Testing :

Testing security ascepts.

Globalization or Internationalization or I18N  Testing :

It is a process of checking end user having a choice to configure different lang options

(currency , date and time format )

Recovery Testing :

It's a process of chekcing how does our application handling unexpected behaviour like 

power failure , system crash , internet issues etc ..

 
Installation : 

It's process of checking are we able to install the software successfull or not 
as per guideliness given in installation documentation

UnInstallation : 


It's process of checking are we able to uninstall the software successfull 
and also data clean 


*********************************************
Day 9			16th May Tuesday
*********************************************


User Acceptance Testing :

Testing carried out by the end user on the delivered product to make sure
wheter it is ready for live production or not.

This UAT is carried out in two Stages :

1. Alpha Testing
2. Beta Testing

Alpha Testing : It is first level of acceptance testing 
carried out at company premises


Beta Testing : It is last level of acceptance testing 
carried out at customer premises

Objective of UAT :

User Acceptance Testing carried out by customer to build the confidence on the devlivered 
application before going to live.

not to find defects.

________________________________________________

Module - S/W TEsting Project 
_________________________________________________

STLC ( Software Testing Life Cycle)

Test Planning :

It is the first of STLC or S/W testing where management defines 
TEst Strategy and Test Plan to execute the work smoothly


Test Strategy:

It is a high level plan and approach defined by management that explains how 
current project to be tested.


Project Manager / Test Manager

Test Plan :

It is a detailed work plan that explains
-> scope of testing
-> Test approaches
-> Resources 
-> Work Schedules 



*********************************************
Day 10			16th May Wednesday
*********************************************

????????????????????????????????????????????????
https://demo.guru99.com/v4/

User ID :	mngr266311
Password :	Admin123$

?????????????????????????????????????????????????


Test Plan Template :

An IEEE 829 test plan document will have following components


1) Project Overiew

2) Documents References 

3) Scope of Testing 

   3.1  In Scope ( features to be tested )
   3.2 Out Scope (features/functionalities not be tested )
4) Test Strategy

5) Test Environment 

6) Test Deliverables

7) Staffing Plan

8) Risk Planning and mitigations

9) Work Schedules 

10) Approvals 

---------------------------------------
Test Analysis 
---------------------------------------
FRS Template

1. Overview

2. Prototype

3. Page Elements

4. Input Validations / business validations 

5. Use Case Diagram

6. Use Cases 



*********************************************
Day 11			18th May Thursday
*********************************************
 
RCN : Requirement Clarification note



----------------------------
Test Design
----------------------------

Test Scenario : ( what to test)

A feature / behaviour / functionality to be tested in the application under test 
is called a Test Sceanrio.

few test scenarios for calculator application

1.check addition
2.check subratcion
3. check multiplictaion
4. check division

etc ...


few test scenarios for a mobile instrument

1. check switch ON/OFF
2. check battery charging
3. check volume
4. check making a call 
5. check recieving a call
6. check sending sms
7. check recieving sms
etc..


?????????????????????????????????????????????????????
Write Test Sceanrio's for Adactin HOtel Applictaion

in home Page

https://adactinhotelapp.com/


?????????????????????????????????????????????????????

In Gmail :

Requirement : R 1.1 SEND AN EMAIL FUNCTIONALITY

??????????????????????????????????????????????????????

In Naukri

https://www.naukri.com/

Requirement : R 1.1 REGISTER

????????????????????????????????????????????????????????


Test Case : ( how to test)


